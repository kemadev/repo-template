name: {{ vcs_namespace }}-{{ vcs_repo }}

networks:
  app:
    driver: bridge
    enable_ipv6: true

secrets:
  netrc:
    name: netrc
    # TIP You can use `export COMPOSE_NETRC="$(echo -e "machine $(git remote get-url origin | grep -oP '.+://\K[^/]+(?=/)')\nlogin git\npassword $(gh auth token)\n")"`
    environment: COMPOSE_NETRC

services:
  app-template:
    profiles:
      - never
    build:
      context: ../../
      dockerfile: build/Dockerfile
      target: dev
      secrets:
        - netrc
    networks:
      - app
    secrets:
      - netrc
    environment:
      # Not all projects under {{ vcs_namespace }} are private, but convenient not to set all exceptions
      GOPRIVATE: "github.com/{{ vcs_namespace }}/*"
      KEMA_RUNTIME_ENVIRONMENT: dev
      KEMA_RUNTIME_APP_NAME: {{ vcs_repo }}
      KEMA_RUNTIME_APP_VERSION: dev
      KEMA_RUNTIME_APP_NAMESPACE: whatever
      KEMA_OBSERVABILITY_ENDPOINT_URL: http://{{ vcs_namespace }}-{{ vcs_repo }}-jaeger-1:4317
      KEMA_CLIENT_DATABASE_CLIENT_ADDRESS: "{{ vcs_namespace }}-{{ vcs_repo }}-valkey-database-1:6379"
      KEMA_CLIENT_DATABASE_PASSWORD: "dev"
      KEMA_CLIENT_CACHE_CLIENT_ADDRESS: "{{ vcs_namespace }}-{{ vcs_repo }}-valkey-cache-1:6379"
      KEMA_CLIENT_CACHE_PASSWORD: "dev"
      # Set this to a strictly positive value to export metrics to stdout
      KEMA_OBSERVABILITY_METRICS_EXPORT_INTERVAL: 0
    ports:
      - 8080:8080
    restart: always
    develop:
      watch:
        - action: rebuild
          path: ../../
          target: /src
    # Close immediately and let compose restart the container without waiting for graceful shutdown
    stop_grace_period: 0s

  app:
    extends:
      service: app-template
    profiles:
      - dev

  app-debug:
    extends:
      service: app-template
    profiles:
      - debug
    build:
      target: debug
    ports:
      - 50000:50000
    security_opt:
      - apparmor=unconfined
    cap_add:
      - SYS_PTRACE

---
# Provide Jaeger for tracing
services:
  jaeger:
    image: jaegertracing/jaeger:latest
    profiles:
      - dev
    ports:
      - 16686:16686
      - 4317:4317
      - 4318:4318
    networks:
      - app
    restart: always

---
# Provide Valkey for NoSQL, enable by setting according profile
volumes:
  valkey-database:
    driver: local

services:
  valkey-database:
    image: valkey/valkey:alpine
    profiles:
      - dev
    environment:
      VALKEY_EXTRA_FLAGS: --protected-mode yes --requirepass dev
    volumes:
      - valkey-database:/data
    ports:
      - 6379:6379
    networks:
      - app
    restart: always

---
# Provide Valkey for NoSQL, enable by setting according profile
volumes:
  valkey-cache:
    driver: local

services:
  valkey-cache:
    image: valkey/valkey:alpine
    profiles:
      - dev
    environment:
      VALKEY_EXTRA_FLAGS: --protected-mode yes --requirepass dev
    volumes:
      - valkey-cache:/data
    ports:
      # Note that host uses 6380 to avoid port clash
      - 6380:6379
    networks:
      - app
    restart: always
