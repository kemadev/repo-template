name: {{ vcs_namespace }}-{{ vcs_repo }}

networks:
  app:
    driver: bridge

secrets:
  netrc:
    name: netrc
    # TIP You can use `export COMPOSE_NETRC="$(echo -e "machine $(git remote get-url origin | grep -oP '.+://\K[^/]+(?=/)')\nlogin git\npassword $(gh auth token)\n")"`
    environment: COMPOSE_NETRC

services:
  app-template:
    profiles:
      - never
    build:
      context: ../../
      dockerfile: build/Dockerfile
      target: dev
      secrets:
        - netrc
    networks:
      - app
    secrets:
      - netrc
    environment:
      # Not all projects under kemadev are private, but convenient not to set all exceptions
      GOPRIVATE: "github.com/kemadev/*"
      RUNTIME_ENV: dev
      APP_NAME: {{ vcs_repo }}
      APP_VERSION: dev
      APP_NAMESPACE: whatever
      OTEL_ENDPOINT_URL: http://localhost:4317
      OTEL_EXPORTER_COMPRESSION: gzip
    ports:
      - 8080:8080
    restart: always
    develop:
      watch:
        - action: rebuild
          path: ../../
          target: /src
    # Close immediately and let compose restart the container without waiting for graceful shutdown
    stop_grace_period: 0s

  app:
    extends:
      service: app-template
    profiles:
      - dev

  app-debug:
    extends:
      service: app-template
    profiles:
      - debug
    entrypoint:
      - dlv
      - dap
      - --listen
      - :50000
    ports:
      - 50000:50000
    security_opt:
      - apparmor=unconfined
    cap_add:
      - SYS_PTRACE

---
volumes:
  postgresql:
    driver: local
services:
  postgresql:
    image: bitnami/postgresql:latest
    container_name: postgresql
    profiles:
      - never
    environment:
      POSTGRESQL_DATABASE: dev
      POSTGRESQL_PORT_NUMBER: 5432
      POSTGRESQL_POSTGRES_PASSWORD: postgres
      POSTGRESQL_USERNAME: dev
      POSTGRESQL_PASSWORD: dev
    volumes:
      - postgres:/bitnami/postgresql
    ports:
      - 5432:5432
    networks:
      - app
    restart: always


---
volumes:
  valkey:
    driver: local

services:
  valkey:
    image: bitnami/valkey:latest
    container_name: valkey
    profiles:
      - never
    environment:
      VALKEY_DATABASE: dev
      VALKEY_PORT_NUMBER: 6379
      VALKEY_PASSWORD: dev
      VALKEY_PRIMARY_PASSWORD: dev
    volumes:
      - valkey:/bitnami/valkey/data
    ports:
      - 6379:6379
    networks:
      - app
    restart: always

---
networks:
  opensearch:
    driver: bridge

volumes:
  opensearch-data1:
    driver: local
  opensearch-data2:
    driver: local

services:
  opensearch-node1:
    profiles:
      - never
    image: opensearchproject/opensearch:3
    container_name: opensearch-node1
    environment:
      cluster.name: dev
      node.name: opensearch-node1
      discovery.seed_hosts: opensearch-node1,opensearch-node2
      cluster.initial_cluster_manager_nodes: opensearch-node1,opensearch-node2
      bootstrap.memory_lock: true
      OPENSEARCH_JAVA_OPTS: -Xms512m -Xmx512m
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: OpenSearchDev_1
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9600:9600
    networks:
      - opensearch
      - app
  opensearch-node2:
    profiles:
      - never
    image: opensearchproject/opensearch:3
    container_name: opensearch-node2
    environment:
      cluster.name: dev
      node.name: opensearch-node2
      discovery.seed_hosts: opensearch-node1,opensearch-node2
      cluster.initial_cluster_manager_nodes: opensearch-node1,opensearch-node2
      bootstrap.memory_lock: true
      OPENSEARCH_JAVA_OPTS: -Xms512m -Xmx512m
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: OpenSearchDev_1
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data2:/usr/share/opensearch/data
    networks:
      - opensearch
      - app
  opensearch-dashboards:
    profiles:
      - never
    image: opensearchproject/opensearch-dashboards:3
    container_name: opensearch-dashboards
    ports:
      - 5601:5601
    expose:
      - '5601'
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200","https://opensearch-node2:9200"]'
    networks:
      - opensearch
